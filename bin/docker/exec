#!/bin/bash

set -eo pipefail

COMMAND="$1"
DOCKER_IMAGE='<DOCKER_IMAGE>'
DOCKER_CONTAINER='<DOCKER_CONTAINER>'

# Check for regular user login
if [ ! $( id -u ) -ne 0 ]; then
  echo 'You must be a regular user to run this script.'
  exit 2
fi

container_exec () {
  echo '------------------------------------------'
  echo "docker exec -it $DOCKER_CONTAINER $COMMAND"
  docker exec -it $DOCKER_CONTAINER $COMMAND
}

container_start () {
  echo '------------------------------'
  echo "docker start $DOCKER_CONTAINER"
  docker start $DOCKER_CONTAINER
}

container_run () {
  echo '-----------------------------------------------------------'
  echo "docker container run --name $DOCKER_CONTAINER $DOCKER_IMAGE"
  docker container run --name $DOCKER_CONTAINER $DOCKER_IMAGE
}

container_create () {
  COMMAND_LOCAL='pwd'
  HS=$PWD/shared # Host machine shared directory
  DIR_DOCKER_SHARED='/home/winner/shared' # Docker shared directory
  echo '--------------------------------------------------------------'
  echo "Creating Docker container $DOCKER_CONTAINER from $DOCKER_IMAGE"
  # docker create -i -t -u='winner' --name $DOCKER_CONTAINER \
    # PORT_SPECIFICATIONS_HERE \
    # -e HOME=/home/winner -e USERNAME=winner \
    # -v $hs:$ds $DOCKER_IMAGE $is

  docker create -i -t -u='winner' --name $DOCKER_CONTAINER \
    -e HOME=/home/winner -e USERNAME=winner \
    -v $HS:$DIR_DOCKER_SHARED $DOCKER_IMAGE $COMMAND_LOCAL
}

container_exec_or_start () {
  container_exec || ( container_start && container_exec)
}

container_exec_or_start
