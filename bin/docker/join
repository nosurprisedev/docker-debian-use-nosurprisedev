#!/bin/bash

set -eo pipefail

IMAGE_PRESENT='false'
CONTAINER_PRESENT='false'
CONTAINER_RUNNING='false'

DOCKER_IMAGE='<DOCKER_IMAGE>'
DOCKER_CONTAINER='<DOCKER_CONTAINER>'

echo ''
echo '-------------------------------------------------------------'
echo 'Checking for the presence of the Docker image ($DOCKER_IMAGE)'
echo ''
for i in $(docker images -a | grep $DOCKER_IMAGE)
do
  IMAGE_PRESENT='true'
done;
wait

# Downloading the Docker image
if [[ "$IMAGE_PRESENT" == 'false' ]]
then
  echo '-------------------------------'
  echo 'BEGIN: downloading Docker image'
  echo '-------------------------------'
  wait
  docker pull "$DOCKER_IMAGE"
  wait
  echo '----------------------------------'
  echo 'FINISHED: downloading Docker image'
  echo '----------------------------------'
else
  echo ''
  echo 'Docker image already present, skipping the download'
  echo ''
fi

echo ''
echo '-----------------------------------------------------'
echo "Checking for the Docker container ($DOCKER_CONTAINER)"
echo ''
wait
for i in $(docker ps -a | grep $DOCKER_CONTAINER)
do
  CONTAINER_PRESENT='true'
done;
wait

# NOTE: Without the "-l" flag, the default Ruby version is the one
# installed with apt-get instead of the one installed with RVM.
INITIAL_SCRIPT='/bin/bash -l' # Initial script to run
DIR_SHARED_HOST=$PWD/shared # Host machine shared directory
DIR_SHARED_DOCKER='/home/winner/shared' # Docker shared directory

# Creating the Docker container
if [[ "$CONTAINER_PRESENT" == 'false' ]]
then
  echo ''
  echo '------'
  echo 'BEGIN:'
  echo "Creating Docker container $DOCKER_CONTAINER"
  echo "from Docker image $DOCKER_IMAGE"
  echo '-------------------------------'
  echo ''
  wait
  # docker create -i -t -u='winner' --name $CONTAINER \
    #PORT_SPECIFICATIONS_HERE \
    # -e HOME=/home/winner -e USERNAME=winner \
    # -v $hs:$ds $DOCKER_IMAGE $is

  docker create -i -t -u=winner --name $DOCKER_CONTAINER \
    -e HOME=/home/winner -e USERNAME=winner \
    -v $DIR_SHARED_HOST:$DIR_SHARED_DOCKER $DOCKER_IMAGE $INITIAL_SCRIPT
  wait

  echo '---------'
  echo 'FINISHED:'
  echo "Creating Docker container $DOCKER_CONTAINER"
  echo "from Docker image $DOCKER_IMAGE"
  echo '-------------------------------'
else
  echo 'Docker container'
  echo "$DOCKER_CONTAINER"
  echo 'already present'
fi
wait

echo ''
echo '-----------------------------------------------------------'
echo "Checking for a running Docker container ($DOCKER_CONTAINER)"
echo ''
for i in $(docker ps | grep $DOCKER_CONTAINER)
do
  CONTAINER_RUNNING='true'
done;
wait

# Starting the Docker container
if [[ "$CONTAINER_RUNNING" == 'false' ]]
then
  echo '------------------------------'
  echo "docker start $DOCKER_CONTAINER"
  wait
  docker start $DOCKER_CONTAINER
  wait
  echo ''
fi
wait

# Entering the Docker container
echo '-------------------------------------------------'
echo "docker exec -it $DOCKER_CONTAINER $INITIAL_SCRIPT"
wait
docker exec -it $DOCKER_CONTAINER $INITIAL_SCRIPT
wait
